#!/bin/bash
# usage: find-convert-flv /source/dir
# use fcf.conf for further configuration

CONFIG_FILE=`echo $FCF_CFG`;
echo "INFO: found configFile > $FCF_CFG";
source "$CONFIG_FILE"
if [ $? = 0 ]
then
echo "INFO: loading configFile				[OK]"
else
echo "ERROR: loading configFile				[FAILED]"
echo "please check permission and path and env var!"
exit 1
fi

cd $scriptDir

timestamp=$(date "+%d"."%m"."%Y %T")

# checking sourceDir
sourceDir="$1"
if [ -n $1 ]
then
fcflog "INFO" "sourceFolderVar					[OK]";
else 
fcflog "ERROR" "sourceFolderVar					[FAILED]";
echo "usage: find-convert-flv /path/to/folder/ "
exit 1
fi

# define converterClass
# $1 = filename     $2 = /path/to/file
convertFile() {
sourceFileName=$1
sourceDir=$2
sourceFile="$2/$1.flv"
destFile="$2/$1.avi"
fcflog "INFO" "flv-convert started > $sourceFile";

# progress indocator
spinner & 
spinner_pid=$!
#################

/usr/local/bin/ffmpeg -loglevel quiet -async 1 -i "$sourceFile" -f avi -b 700k -qscale 0 -ab 160k -ar 44100 "$destFile" < /dev/null

# kill progress imdicator
kill $spinner_pid &>/dev/null
#####################

if [ $? = 0 ]
then
#deleteRowfromList
fcflog "INFO" "flv-convert					[OK]";
	case "$deleteFileAfterConvert" in
		yes) rm "$sourceFile" && fcflog "INFO" "remove sourceFile					[OK]"
		;;
		no) fcflog "INFO" "dont remove sourceFile					[OK]"
		;;
		*) fcflog "INFO" "dont remove sourceFile					[OK]"
		;;
	esac
else
fcflog "WARNING" "flv convertion					[FAILED]";
echo "skipping file > $fileName";
echo " "
fi
}

# del/touch fcf.list
rm $listFile && touch $listFile
if [ $? = 0 ]
then
fcflog "INFO" "create listFile					[OK]";
else
fcflog "ERROR" "create listFile					[FAILED]";
echo "please check permission and path and env var!"
exit 1
fi

# find .flv files in sourceDir and fill listFile
#find "$sourceDir/" -type f -name "*.flv" -exec echo '{}' >> $listFile \;
cd $sourceDir && ls -1 *.flv| cut -d . -f 1 >> $listFile
if [ $? = 0 ]
then
cd $scriptDir
fcflog "INFO" "find .flv files					[OK]";
fcflog "INFO" "fill listFile					[OK]";
else
cd $scriptDir
fcflog "ERROR" "find .flv files					[FAILED]";
fcflog "ERROR" "fill listFile					[FAILED]";
echo "check if sourceDir exist and connection etablished!"
exit 1
fi

# read listFile
fcflog "INFO" "reading listFile					[...]";
while IFS='' read -r fileName
do
	convertFile "$fileName" "$sourceDir";
done < "$listFile"

if [ $? = 0 ]
then
fcflog "INFO" "reading listFile					[OK]";
else
fcflog "ERROR" "reading listFile				[FAILED]";
echo "check permissions and if listFile exists!"
exit 1
fi


